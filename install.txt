#--------------------------------------------------------------------------------------------------------------------------------------
#                                                    JDK Installation
#--------------------------------------------------------------------------------------------------------------------------------------
# Step 1: Download the JDK
# Change to the directory ~/Download
cd  ~/Download
# command to Download JDK Setup
wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.tar.gz

# Step 2: Unpack the downloaded JDK file into root directory (~/)

tar zxvf jdk-8u45-linux-x64.tar.gz -C ~

# The above instruction unpacks the tar.gz file into ~/jdk1.8.0_45
# Step 3: Setting JAVA_HOME and PATH( This is for running ActiveMQ Broker)

vim .bashrc

# (vim) Command line text editor opens a file (Edit the file and enter the following instructions)
JAVA_HOME=/root/jdk1.8.0_45
# NOTE: Don't remove the PATH variable, only append  jJAVA_HOME/bin to existing PATH
PATH=$PATH:$JAVA_HOME/bin 

# Step 4: Check JAVA_HOME and PATH directory 
echo $JAVA_HOME
echo $PATH

# Step 7: Confirm Java Version in use is the installed version
java -version

# Java version “1.8.0"? will be displayed

#--------------------------------------------------------------------------------------------------------------------------------------
#                                                    Pre-Installation for ActiveMQ
#--------------------------------------------------------------------------------------------------------------------------------------

# ActiveMQ requires that JDK be setup before it can run.
# Login into the server and check if Java is Installed and set properly
echo JAVA_HOME
# /root/jdk1.8.0_45 should be displayed on the console
java -version
#  Java version 1.8.0 should be displayed on the console
# If Java is not set properly refer to JDK Installation

#--------------------------------------------------------------------------------------------------------------------------------------
#                                                    ActiveMQ Installation
#--------------------------------------------------------------------------------------------------------------------------------------

# Installation instruction for ActiveMQ
# Step 1: Change to ~/Download
cd  ~/Download

# Step 2: Download ActiveMQ
wget http://apache.is.co.za/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz

#Step 3: Unpack the downloaded ActiveMQ setup file into ~/ by typing following command:
tar zxvf apache-activemq-5.11.1-bin.tar.gz -C ~/

# Create a Symbolic link to ActiveMQ home
ln -s ~/activemq-5.11.1-bin activemq

# Add  symbolic link to the init script provided by Active MQ (64 bit linux example):

ln -sf activemq/bin/linux-x86-64/activemq /etc/init.d/

# Create a default configuration file:

/etc/init.d/activemq setup /etc/default/activemq

#--------------------------------------------------------------------------------------------------------------------------------------
#                                                    Post-Installation ActiveMQ
#---------------------------------------------------------------------------------------------------------------------------------------

# ActiveMQ comes with default settings for Web Console and TCP connectors. These settings need 
# to be changed to secure ActiveMQ for (Remote) access and enable tcp connections. The instructions below are for changing the 
# default settings and customizing accordingly.

# Configure a broker and tcp variables using vim utility

vim activemq/conf/activemq.xml

# Edit the text file by type i and navigating the text file. Locate the brokerName and change broker name to polygon. 
# Locate Transport connectors <transportConnector name="openwire" uri="tcp://0.0.0.0:61616" enableStatusMonitor="true"/>
# Change uri as uri="45.56.76.161:61616" and exit the terminal by clicking Esc, then :wq press enter
# By Default, my Web Console credentials are admin/admin. For security purpose, these default values should be changed as follows:

vim ~/apache-activemq-5.11.1/conf/jetty-realm.properties
# Edit the properties file as per below.
# Change username and password and leave the roles. Under , admin,admin,admin
polygon, P@1yg0N,admin

# Remove user,user,user 
# Exit the text editor and save the file (:wq)

# Check if web console respond to request
 wget http://localhost:8161/admin
 
# nc localhost 8161, nv localhost 8161
nc -z 45.56.76.161 61616
openssl s_client -connect 45.56.76.161:8161 -crlf
#ActiveMQ's default port is 61616. Run netstat and search for port 61616.
netstat -an|grep 61616
#and  web console should be available http://localhost:8161.

#--------------------------------------------------------------------------------------------------------------------------------------
#                                                    Starting ActiveMQ
#---------------------------------------------------------------------------------------------------------------------------------------
# If you like you can setup activemq to start on startup:
# update-rc.d activemq/bin/activemq defaults

# Start ActiveMQ Admin 
./activemq/bin/activemq-admin
./activemq/bin/activemq-admin start

Ctrl+C

# Run activemq
./activemq/bin/activemq start

# To check if the active mq is up and running
./activemq/bin/activemq status 
# To stop the currently executing broker
./activemq/bin/activemq stop

#--------------------------------------------------------------------------------------------------------------------------------------
#                                                    Uninstallation of ActiveMQ
#---------------------------------------------------------------------------------------------------------------------------------------
# To remove ActiveMQ in the file system
update-rc.d -f activemq remove
rm /etc/init.d/activemq



# Refer to ActiveMQ online Documentation for further usage
http://activemq.apache.org/

# An On-Install for ActiveMQ, the below link can also be referred to:
https://sites.google.com/a/microgolem.com/www/home/infrastructure/linux/ubuntu/activemq-installation


        ############################################################################
                     		 MySQL Installation
	############################################################################



 #------------------------------------------#
  	 MySQL Pre-Installation setup
 #------------------------------------------#

# Verify that the version(s) of MySQL server that you intalling are supported by your server
# Determine what version of glibc your OS with the following command:

	ldd --version
# Download   mysql-5.1.73-linux-x86_64-glibc23.tar.gz on mysql http://www.mysql.com/ site to your server
# Into the download directory 
         
        cd download/
	wget http://dev.mysql.com/get/Downloads/MySQL-5.1/mysql-5.1.73-linux-x86_64-glibc23.tar.gz



 #------------------------------------------#
  	 MySQL Post-Installation setup 
 #------------------------------------------#


#Go to the root directory
     cd ~
#First, you will need to create the mysql group if it does not already exist.
#You can find out if it exists by the following command:

	cut -d: -f1 /etc/group | grep mysql

#If the mysql group already exists, the above command will print:

	mysql
#If the command does not give this result, you will need to create the mysql group:

	sudo groupadd mysql

#Now that the mysql group has been added, you will need to create a user named mysql.
#First, check to see if it already exists:

	cut -d: -f1 /etc/passwd | grep mysql

#If this command does not return:

	mysql

#Then you will need to create the mysql user, and add it to the mysql group:

	sudo useradd -r -g mysql mysql



 #-------------------------------------#
	 MySQL Installation 
 #-------------------------------------#


#We will now unpack the MySQL tar archive. Here, will assume the file is named mysql-5.1.73-linux-x86_64-glibc23.tar.gz,
#and that it is located in the directory /downloads.
#First, choose where to install MySQL. Here, 
#we will choose the directory /root, which is a standard location. In our installation, making changes to this directory requires root privileges,
#so we will execute many of the following commands using sudo.
#Now, we will unpack the tar archive into this directory the root directory by the following command
#which will create an installation directory containing all the tarball's contents:

         cd downloads/

	tar zxvf mysql-5.1.73-linux-x86_64-glibc23.tar.gz -C /usr/local/
	 

cd ~

#Next we will create a symbolic link to this directory called mysql, using the ln command:

	ln -s mysql-5.1.73-linux-x86_64-glibc23 mysql

#Now we will edit the configuration file, create the core databases, start the MySQL server, and set up passwords for the essential MySQL users.

#First, we will cd into our base MySQL directory:

	cd mysql

#We should add /mysql to our PATH environment variable
#Add the line PATH=$PATH:/mysql/bin to the .profile file in your home directory

        vim .bashrc
        MYSQL_HOME=/usr/local/mysql-5.1.73-linux-x86_64-glibc23
        PATH=$PATH:$MYSQL_HOME/bin
        

#Now let's make sure that the mysql user and group are the owners of everything we just installed:

	sudo chown -R mysql /usr/local/mysql/ .

	sudo chgrp -R mysql /usr/local/mysql/ .
	

#Now we will run the mysql_install_db program to set up the initial MySQL
#Grant tables which define how users are able to access the MySQL databases. 
#This process is performed automatically in other installation procedures,
#such as using a package manager. Here we will do it manually :

    
    sudo /usr/local/mysql/scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql \ --datadir=/usr/local/mysql/data

#When mysql_install_db runs successfully, it will create the server's data directory
#with mysql as the owner
#Now we will start the MySQL server:

	cd /usr/local/mysql ; /usr/local/mysql/bin/mysqld_safe &
        
        ./bin/mysql_secure_installation

#You will be promnted for password , press enter
#Then it will promt you a new password enter your new password 
#Then re-enter your password again
#Then press y for yes and enter four times

#Now you can run mysql with the foolowing command

   ./bin/mysql -u root -p 

#Now exit mysql.
#Cd to the root directory by 

        cd ~

#create the cnf by 

        cp /usr/local/mysql/support-files/my-medium.cnf /etc/my.cnf

#After installing mysql go to my.cnf file and edit it to add the bind address by the following command

    vi /etc/my.cnf
    source  /etc/my.cnf

#Add bind-address  

    "bind-address            = 45.56.76.161"

#Create the sysmbolick link for managin mysql server

  cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql.server

#Restart mysql by the following command

     /etc/init.d/mysql.server restart

#Now verify that the server in fact has port 3306 open by executing the following command

    netstat -ntlup | grep 3306

#You should see an output like this:

    tcp        0      0 45.56.76.161:3306       0.0.0.0:*               LISTEN      27972/mysqld


#Open mysql again to configure databases and privileges

 mysql -u root -p

#Enter the password you created

mysql> show schema;

mysql> create schema polygon;


mysql> use mysql;

mysql> select user, password, host from user;

mysql> update user set user='polygon' where user='root'

mysql> select user, password, host from user;

mysql>  grant all privilleges on polygon.* to polygon@'45.56.76.161' identified by 'P@1ygN'
mysql>  grant all privilleges on polygon.* to polygon@'%' identified by 'P@1ygN'
mysql>  grant all privilleges on polygon.* to polygon@'localhost' identified by 'P@1ygN'



 #-----------------------------------------#
 	Unistalling MySQL 
 #------------------------------------------#

#To uninstall the activemq service, you may do the following:
	sudo update-rc.d -f mysql remove
        sudo update-rc.d -f mysql.server remove
	sudo rm /etc/init.d/mysql.server





###############################################################################
                       Polygon Set Up Doc
###############################################################################

#Step1  Log in to the server using putty

            Put Host Name as 45.56.76.161 click Open
                 userName :root Press Enter
                 password :$3cr3t Press Enter
 
#Step2  Check if jdk in installed
    
        When you are inside the server you can use the command below to check the java version 
	    Command : java -verion
        if the command give a value like 
                java version "1.8.0_05"
                Java(TM) SE Runtime Environment (build 1.8.0_05-b13)
                Java HotSpot(TM) 64-Bit Server VM (build 25.5-b02, mixed mode)
 

#Step3  To check if activeMQ is installed use the web address mentioned below
                    Wed Address: http://45.56.76.161:8161/admin

 
                            userName :polygon
                            password :P@1yg0N                        press Enter 

        If you successfully logged in using the credentials mentioned above then it verifies that activeMQ is installed in the server

 
#Step4  To check the status of the activeMQ on the server please refer to activeMQ documentation.

#Step5  To check the status of the MySQL in server.
        
        Once you manage to get into the server using putty you should run the command below to check the status of the MySQL installed on the server
                        command : /etc/init.d/mysql.server status
 

#Step6  To start and stop MySQL server please refer to MySQL documentation.

#Step7  To run Polygon app on the server
 
	We have two profiles as of now one as test and the other as dev

#Step8  If you running the polygon app in a test profile

        These are the following things you need to check before running the polygon application.

#Step9  You need to look for these files in the server first before starting the application
                            data.sql,schema.sql,polygon-0.0.1-SNAPSHOT.jar 

#Step10 If these files are not there then you need to import these files to the server using winSCP 
            
#Step11 Connect to the server using winSCP
 
        HostName:45.56.76.161
        userName:root
        password:R3v3r$1d3

#Step12 Once you successfully manage to connect to the server 
		
 	Drag and drop the data.sql ,schema.sql and polygon-0.0.1-SNAPSHOT.jar files 

        After you successfully transfer the file we need to run the schema.sql file and data.sql file manually.


#Step13 First need to check if there is existing polygon schema in the server
 
        in order to achieve that we run this command: show schemas;

#Step14 You will be able to see all the schema's available in the server.If you are unable to find polygon schema then you need to create it by the command

            create schema polygon;

#Step15 After successfully creating a schema you need to use that schema by the command 

                use {schema Name};
#Step16 Then you need to run the script to create the table by the command
            source ~/schema.sql;

#Step17 Then you need to run the script to insert the data in the tables by the command

            source ~/data.sql;

#Step18 Now you should be able to see the tables using the command

            show tables;

#Step19 To check if all the dataï¿½s are successfully inserted on the tables we can query any table by the command

        select * from {table Name};

#Step20 After you have successfully configured MySQL, activeMQ and jdk we need to start the application by the following command

            java -jar polygon-0.0.1-SNAPSHOT.jar --spring.profiles.active={profile Name}

#Step21 After successfully the application is started you can use the web address below to check the application

            http://li926-161.members.linode.com/portal/index.html

#Step22 If you are using dev profile to run the application

        you just need the polygon-0.0.1-SNAPSHOT.jar in the server.

#Step23 You can start the application if using dev profiles 

        java -jar polygon-0.0.1-SNAPSHOT.jar --spring.profiles.active={profile Name}

#Step24 After successfully the application is started you can use the web address below to check the application

            http://localhost:8080/portal/index.html